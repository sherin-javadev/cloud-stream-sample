server.port: 9090
spring:
  kafka.bootstrap-servers: localhost:9092
  kafka.consumer.bootstrap-servers: localhost:9092
  cloud.stream.kafka.streams.binder.brokers: localhost:9092
  cloud.stream.kafka.binder.brokers: localhost:9092
  cloud.stream.kafka.binder.zkNodes: localhost:2181
  cloud.stream.kafka.streams:
    binder:
      application-id: demo-application
      min-partition-count: 1
      auto-add-partitions: false
      configuration:
        num.stream.threads: 1
        key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default:
          key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
          value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    bindings:
      topicA-in:
        consumer:
          application-id: topic-Ac
      topicB-in:
        consumer:
          application-id: topic-Bc
          
  cloud.stream.bindings:
    topicA-in:
      group: topic-A-In
      destination: topicA
      consumer:
        instance-count: 1
        instance-index: 1
        headerMode: raw
        concurrency: 10
        partitioned: true
      producer:
        headerMode: raw
    topicB-in:
      group: topic-B-In
      destination: topicB
      consumer:
        instance-count: 1
        instance-index: 1
        headerMode: raw
        concurrency: 1
        partitioned: false
      producer:
        headerMode: raw
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
